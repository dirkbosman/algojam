{"version":3,"sources":["webpack:///./src/templates/tag-posts.js"],"names":["tagQuery","tagPosts","data","pageContext","useState","hasMounted","setHasMounted","useEffect","tag","totalCount","allMarkdownRemark","pageHeader","md","edges","map","node","key","id","uid","frontmatter","title","author","date","body","excerpt","tags","fluid","image","childImageSharp","audio_url","palette","html"],"mappings":"8FAAA,iJA4DaA,EAAQ,aAqCNC,UAvFE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EACNC,oBAAS,GAAtCC,EADmC,KACvBC,EADuB,KAK1C,GAHAC,qBAAU,WACRD,GAAc,KACb,KACED,EACH,OAAO,KANiC,IASlCG,EAAQL,EAARK,IACAC,EAAeP,EAAKQ,kBAApBD,WACFE,EAAgBF,EAAN,SACC,IAAfA,EAAmB,GAAK,KADV,iBAECD,EAFD,IAMhB,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,GAAG,KACN,4BAAKD,GACJT,EAAKQ,kBAAkBG,MAAMC,KAAI,kBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,MAAD,GACEC,IAAKD,EAAKE,GACVC,IAAKH,EAAKI,YAAYD,IAEtBE,MAAOL,EAAKI,YAAYC,MACxBC,OAAQN,EAAKI,YAAYE,OACzBC,KAAMP,EAAKI,YAAYG,KACvBC,KAAMR,EAAKS,QACXC,KAAMV,EAAKI,YAAYM,KACvBC,MAAOX,EAAKI,YAAYQ,MAAMC,gBAAgBF,MAC9CG,UAAWd,EAAKI,YAAYU,UAC5BC,QAASf,EAAKI,YAAYW,UAX5B,KAYQf,EAAKgB,KAZb,QAgBJ,kBAAC,IAAD,CAAKnB,GAAG,KACN,kBAAC,IAAD","file":"component---src-templates-tag-posts-js-907666702c42985c7ae0.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/Post\";\nimport { Row, Col } from \"reactstrap\";\nimport Sidebar from \"../components/Sidebar\";\nimport StateContextProvider from \"../components/stateContext\";\n\n// import { slugify } from \"../utils/utilityFunctions\";\n\nconst tagPosts = ({ data, pageContext }) => {\n  const [hasMounted, setHasMounted] = useState(false);\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n  if (!hasMounted) {\n    return null;\n  }\n\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const pageHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  // handle bookmarks' state -> for people to unbookmark\n\n  return (\n    <StateContextProvider>\n      {/* <Layout pageTitle={pageHeader}> */}\n      <Layout>\n        <Row>\n          <Col md=\"8\">\n            <h1>{pageHeader}</h1>\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n              <Post\n                key={node.id}\n                uid={node.frontmatter.uid}\n                // slug={node.fields.slug}\n                title={node.frontmatter.title}\n                author={node.frontmatter.author}\n                date={node.frontmatter.date}\n                body={node.excerpt}\n                tags={node.frontmatter.tags}\n                fluid={node.frontmatter.image.childImageSharp.fluid}\n                audio_url={node.frontmatter.audio_url}\n                palette={node.frontmatter.palette}\n                body={node.html}\n              />\n            ))}\n          </Col>\n          <Col md=\"4\">\n            <Sidebar />\n          </Col>\n        </Row>\n      </Layout>\n    </StateContextProvider>\n  );\n};\n\nexport const tagQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            title\n            date(formatString: \"MMMM Do YYYY\")\n            author\n            tags\n            audio_url\n            palette\n            image {\n              childImageSharp {\n                fluid(maxWidth: 650, maxHeight: 370) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n          html\n        }\n      }\n    }\n  }\n`;\n\nexport default tagPosts;\n"],"sourceRoot":""}