{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/utils/utilityFunctions.js","webpack:///./src/templates/tags-page.js","webpack:///./node_modules/reactstrap/es/Row.js","webpack:///./node_modules/reactstrap/es/Col.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","module","exports","slugify","text","toString","toLowerCase","replace","tagsPage","pageContext","tags","tagPostCounts","pageTitle","title","keywords","md","map","key","style","marginBottom","Row","noGutters","form","widths","colClasses","forEach","colWidth","i","colSize","isXs","push","getColumnSizeClass","Col","columnProp","_classNames","colSizeInterfix","colClass","size","order","offset","_colClass","length"],"mappings":"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","file":"component---src-templates-tags-page-js-a01ee6be4b84cffc7ffe.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","const slugify = function (text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nmodule.exports = { slugify };\n","// import React, { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Badge, Button } from \"reactstrap\";\nimport { slugify } from \"../utils/utilityFunctions\";\nimport { Row, Col } from \"reactstrap\";\nimport Sidebar from \"../components/Sidebar\";\nimport StateContextProvider from \"../components/stateContext\";\n\nconst tagsPage = ({ pageContext }) => {\n  const { tags, tagPostCounts } = pageContext;\n\n  // const [hasMounted, setHasMounted] = useState(false);\n  // useEffect(() => {\n  //   setHasMounted(true);\n  // }, []);\n\n  // if (!hasMounted) {\n  //   return null;\n  // }\n\n  return (\n    <StateContextProvider>\n      <Layout pageTitle=\"All tags\">\n        <SEO title=\"All tags\" keywords={[\"tags\", \"topics\"]} />\n        <Row>\n          <Col md=\"8\">\n            <ul>\n              {tags.map((tag) => (\n                <li key={tag} style={{ marginBottom: \"10px\" }}>\n                  <Button color=\"primary\" href={`/tag/${slugify(tag)}`}>\n                    {tag} <Badge color=\"light\">{tagPostCounts[tag]}</Badge>\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          </Col>\n          <Col md=\"4\">\n            <Sidebar />\n          </Col>\n        </Row>\n      </Layout>\n    </StateContextProvider>\n  );\n};\n\nexport default tagsPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}